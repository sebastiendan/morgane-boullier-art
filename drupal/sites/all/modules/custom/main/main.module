<?php

/**
 * Implements hook_init().
 */
function main_init() {
  drupal_add_js('http://cdnjs.cloudflare.com/ajax/libs/gsap/latest/TweenLite.min.js', 'external');
  drupal_add_js('http://cdn.jsdelivr.net/velocity/1.2.3/velocity.min.js', 'external');
}

/**
 * Implements hook_block_info().
 */
function main_block_info() {
  $blocks = array();

  $blocks['main_menu_button'] = array(
    'info' => t('Main menu button'),
    'cache' => DRUPAL_CACHE_GLOBAL,
  );

  $blocks['newsletter'] = array(
    'info' => t('Newsletter'),
    'cache' => DRUPAL_CACHE_GLOBAL,
  );

  $blocks['social'] = array(
    'info' => t('Social'),
    'cache' => DRUPAL_CACHE_GLOBAL,
  );

  $blocks['home_scroll_banner'] = array(
    'info' => t('Home scroll banner'),
    'cache' => DRUPAL_CACHE_GLOBAL,
  );

  $blocks['footer_legals'] = array(
    'info' => t('Footer legals'),
    'cache' => DRUPAL_CACHE_GLOBAL,
  );

  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function main_block_view($delta) {
  $block = array();
  switch ($delta) {
    case 'main_menu_button':
      $block['content'] = theme('main_menu_button');
      break;
    case 'newsletter':
      $block['content'] = theme('newsletter');
      break;
    case 'social':
      $block['content'] = theme('social');
      break;
    case 'home_scroll_banner':
      $block['content'] = theme('home_scroll_banner', array('url' => drupal_get_path_alias('node/5')));
      break;
    case 'footer_legals':
      $block['content'] = theme('footer_legals');
      break;
  }
  return $block;
}

/**
 *  Implements hook_theme().
 */
function main_theme($existing, $type, $theme, $path) {
  return array(
    'main_menu_button' => array(
      'path' => drupal_get_path('module', 'main') . '/templates',
      'template' => 'main_menu_button',
    ),
    'newsletter' => array(
      'path' => drupal_get_path('module', 'main') . '/templates',
      'template' => 'newsletter',
    ),
    'social' => array(
      'path' => drupal_get_path('module', 'main') . '/templates',
      'template' => 'social',
    ),
    'video_play_button' => array(
      'path' => drupal_get_path('module', 'main') . '/templates',
      'template' => 'video_play_button',
    ),
    'scroll_down_button' => array(
      'path' => drupal_get_path('module', 'main') . '/templates',
      'template' => 'scroll_down_button',
    ),
    'home_scroll_banner' => array(
      'path' => drupal_get_path('module', 'main') . '/templates',
      'template' => 'home_scroll_banner',
      'url' => '',
    ),
    'content_link_button' => array(
      'path' => drupal_get_path('module', 'main') . '/templates',
      'template' => 'content_link_button',
    ),
    'footer_legals' => array(
      'path' => drupal_get_path('module', 'main') . '/templates',
      'template' => 'footer_legals',
    ),
    'close_button' => array(
      'path' => drupal_get_path('module', 'main') . '/templates',
      'template' => 'close_button',
    ),
    'bullet_button' => array(
      'path' => drupal_get_path('module', 'main') . '/templates',
      'template' => 'bullet_button',
    ),
  );
}

/**
 * Implements hook_node_view_alter().
 */
/**
 * Implements hook_node_view().
 */
function main_node_view($node, $view_mode, $langcode) {
  switch($node->type) {
    case 'home_page':
      if (!empty($node->field_home_video)) {
        $node->content['field_headline']['#suffix'] = theme('video_play_button');
      }
      break;
    case 'content_page':
      if ($view_mode == 'full') {
        $node->content['field_banner']['#prefix'] = '<div id="banner-wrapper">' . theme('scroll_down_button');
        $node->content['field_banner']['#suffix'] = '</div>';

        // La plante
        if ($node->nid == 6) {
          $nodes = main_load_nodes('tea_type');
          $markup = '';
          foreach($nodes as $element) {
            $item = node_view($element);
            $markup .= render($item);
          }
          $node->content['tea_types'] = array(
            '#markup' => $markup,
            '#prefix' => '<div id="tea-types-wrapper"><div id="section-title">' . t('Main tea types') . '</div><div id="tea-types">',
            '#suffix' => '</div></div>',
            '#weight' => 2,
          );
        }

        $menu = menu_link_get_preferred(current_path());
        switch($menu['p1']) {
          case 437:
            $menu_parent_title = t('Discovery');
            break;
          case 455:
            $menu_parent_title = t('Tea like Twinings');
            break;
        }
        if (isset($menu_parent_title) && $menu['p1'] !== $menu['mlid']) {
          $node->content['title_field']['#prefix'] = '<div id="menu-parent-title">' . $menu_parent_title . '</div>';
        }
      }
      if ($view_mode == 'teaser') {
        $node->content['button'] = array(
          '#markup' => theme('content_link_button'),
          '#weight' => 10,
        );
        $node->content['links']['node']['#links']['node-readmore']['title'] = '';
      }
      break;
    case 'products_page':
      if ($view_mode == 'full') {
        $node->content['field_banner']['#prefix'] = '<div id="banner-wrapper">' . theme('scroll_down_button');
        $node->content['field_banner']['#suffix'] = '</div>';
      }
      break;
    case 'product':
      if ($view_mode == 'teaser') {
        $node->content['links']['node']['#links']['node-readmore']['title'] = '';
      }
      if ($view_mode == 'full') {
        $node->content['field_banner']['#prefix'] = '<div id="banner-wrapper">' . theme('scroll_down_button');
        $node->content['field_banner']['#suffix'] = '</div>';
      }
      break;
  }
}

function main_preprocess_node(&$variables) {
  switch ($variables['type']) {
    case 'content_page':
      $variables['page'] = TRUE;
      $variables['display_submitted'] = FALSE;

      $menu = menu_link_get_preferred(current_path());
      switch($menu['p1']) {
        case 437:
          $variables['classes_array'][] = 'category-la-decouverte';
          $variables['menu_parent_title'] = t('Discovery');
          break;
        case 455:
          $variables['classes_array'][] = 'category-the-comme-twinings';
          $variables['menu_parent_title'] = t('Tea like Twinings');
          break;
      }
      break;
    case 'product':
      $variables['page'] = TRUE;
      $variables['display_submitted'] = FALSE;
      $term = taxonomy_term_load($variables['field_theme_variation'][LANGUAGE_NONE][0]['tid']);
      $variables['attributes_array']['data-colour'] = $term->field_colour[LANGUAGE_NONE][0]['value'];
      $variables['attributes_array']['data-pattern'] = file_create_url($term->field_pattern[LANGUAGE_NONE][0]['uri']);
      if (isset($variables['field_intensity'][0])) {
        $term = taxonomy_term_load($variables['field_intensity'][0]['tid']);
        $variables['classes_array'][] = strtolower($term->name_field['en'][0]['value']) . '-intensity';
      }
      break;
    case 'tea_type':
      $variables['page'] = TRUE;
      $variables['display_submitted'] = FALSE;
      break;
  }
}

/**
 * Implements hook_preprocess_HOOK().
 */
function main_preprocess_entity(&$variables) {
  if ($variables['entity_type'] == 'information_board') {
    $variables['page'] = TRUE;
    $variables['display_submitted'] = FALSE;
  }

  if ($variables['entity_type'] == 'information_boards_group') {
    $variables['page'] = TRUE;
    $variables['display_submitted'] = FALSE;
  }

  if ($variables['entity_type'] == 'bullet_popup') {
    $variables['page'] = TRUE;
    $variables['display_submitted'] = FALSE;
  }
}

/**
 * Implements hook_form_alter().
 */
function main_form_alter(&$form, &$form_state, $form_id) {
  switch($form['#id']) {
    case 'views-exposed-form-products-default':
      if (isset($form['field_category_tid']['#options']['All'])) {
        unset($form['field_category_tid']['#options']['All']);
      }
      break;
  }
}

/**
 * Implements hook_preprocess_HOOK().
 */
function main_preprocess_views_view(&$vars) {
  global $language;

  $view = $vars['view'];
  if ($view->name == 'products' && isset($view->exposed_raw_input['field_category_tid'])) {
    $tid = $view->exposed_raw_input['field_category_tid'];
    $term = taxonomy_term_load($tid);
    $label = $term->field_products_page_label[$language->language][0]['value'];

    $vars['product_category_label'] = $label;
  }
}

/**
 * Implements hook_entity_view().
 */
function main_entity_view($entity, $type, $view_mode, $langcode) {
  global $language;

  switch($type){
    case 'information_board':
      $entity->content['#groups']['group_content']->label = ' ';
      break;
    case 'bullet_popup':
      $entity->content['close_button']['#markup'] = theme('close_button');
      $entity->content['#group_children']['close_button'] = 'group_popup';
      $entity->content['bullet_button']['#markup'] = theme('bullet_button');
      $entity->content['#group_children']['bullet_button'] = 'group_button';
      dsm($entity);
      break;
  }
}

/**
 * @param $fields
 * @param $context
 */
function main_inline_entity_form_table_fields_alter(&$fields, $context) {
  if ($context['parent_bundle'] == 'content_page' && $context['entity_type'] == 'information_boards_group') {
    unset($fields['id']);

    $fields['title_field'] = array(
      'type' => 'field',
      'label' => t('Title'),
      'weight' => 2
    );
  }

  if ($context['entity_type'] == 'bullet_popup') {
    unset($fields['id']);

    $fields['title_field'] = array(
      'type' => 'field',
      'label' => t('Title'),
      'weight' => 2
    );
  }

  if ($context['parent_bundle'] == 'information_boards_group' && $context['entity_type'] == 'information_board') {
    unset($fields['id']);

    $fields['field_picto'] = array(
      'type' => 'field',
      'label' => t('Image'),
      'weight' => 1
    );

    $fields['title_field'] = array(
      'type' => 'field',
      'label' => t('Title'),
      'weight' => 2
    );
  }
}

function main_load_nodes($type) {
  $query = new EntityFieldQuery();

  $query->entityCondition('entity_type', 'node')
    ->entityCondition('bundle', $type)
    ->propertyCondition('status', NODE_PUBLISHED)
    ->addMetaData('account', user_load(1)); // Run the query as user 1.

  $result = $query->execute();

  if (isset($result['node'])) {
    $nids = array_keys($result['node']);
    $items = entity_load('node', $nids);
  }

  return $items;
}