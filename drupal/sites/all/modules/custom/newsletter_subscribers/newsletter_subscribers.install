<?php

/**
 * @file
 * Sets up the base table for our entity and a table to store information about
 * the entity types.
 */

/**
 * Implements hook_schema().
 */
function newsletter_subscribers_schema() {
  $schema = array();

  $schema['newsletter_subscriber'] = array(
    'description' => 'The base table for newsletter_subscriber entities.',
    'fields'      => array(
      'newsletter_subscriber_id' => array(
        'description' => 'Primary Key: Identifier for a newsletter_subscriber.',
        'type'        => 'serial',
        'unsigned'    => TRUE,
        'not null'    => TRUE,
      ),
      'type'           => array(
        'description' => 'The {newsletter_subscriber_type}.type of this newsletter_subscriber.',
        'type'        => 'varchar',
        'length'      => 255,
        'not null'    => TRUE,
        'default'     => '',
      ),
      'name'           => array(
        'description' => 'The name of the newsletter_subscriber - a human-readable identifier.',
        'type'        => 'varchar',
        'length'      => 255,
        'not null'    => TRUE,
        'default'     => '',
      ),
      'created'        => array(
        'description' => 'The Unix timestamp when the newsletter_subscriber was created.',
        'type'        => 'int',
        'not null'    => TRUE,
        'default'     => 0,
      ),
      'changed'        => array(
        'description' => 'The Unix timestamp when the newsletter_subscriber was most recently saved.',
        'type'        => 'int',
        'not null'    => TRUE,
        'default'     => 0,
      ),
      'uid'            => array(
        'type'         => 'int',
        'foreign keys' => array(
          'users' => array(
            'table'   => 'users',
            'columns' => array('uid' => 'uid'),
          ),
        ),
      ),
    ),
    'primary key' => array('newsletter_subscriber_id'),
    'indexes'     => array(
      'type' => array('type'),
    ),
  );

  $schema['newsletter_subscriber_type'] = array(
    'description' => 'Stores information about defined newsletter_subscriber types.',
    'fields'      => array(
      'id'     => array(
        'type'        => 'serial',
        'not null'    => TRUE,
        'description' => 'Primary Key: Unique newsletter_subscriber type identifier.',
      ),
      'type'   => array(
        'description' => 'The machine-readable name of this newsletter_subscriber type.',
        'type'        => 'varchar',
        'length'      => 255,
        'not null'    => TRUE,
      ),
      'label'  => array(
        'description' => 'The human-readable name of this newsletter_subscriber type.',
        'type'        => 'varchar',
        'length'      => 255,
        'not null'    => TRUE,
        'default'     => '',
      ),
      'weight' => array(
        'type'        => 'int',
        'not null'    => TRUE,
        'default'     => 0,
        'size'        => 'tiny',
        'description' => 'The weight of this newsletter_subscriber type in relation to others.',
      ),
    ) + entity_exportable_schema_fields(),
    'primary key' => array('id'),
    'unique keys' => array(
      'type' => array('type'),
    ),
  );

  return $schema;
}
